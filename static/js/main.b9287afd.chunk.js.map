{"version":3,"sources":["Controls/Controls.jsx","Progress/Progress.jsx","Publication/Publication.jsx","Reader/Reader.jsx","App/App.jsx","index.js"],"names":["Controls","onButtonClick","prevBtnDisabled","nextBtnDisabled","type","onClick","disabled","Progress","currentPage","totalPages","Publication","publication","title","text","Reader","state","showPublication","pubInx","queryString","parse","props","location","search","item","items","history","push","handlePubInx","Number","this","length","replace","Component","App","className","path","render","publications","from","to","ReactDOM","document","getElementById"],"mappings":"60gBA8BeA,EA3BE,SAAC,GAAyD,IAAvDC,EAAsD,EAAtDA,cAAeC,EAAuC,EAAvCA,gBAAiBC,EAAsB,EAAtBA,gBAClD,OACE,iCACE,4BACEC,KAAK,SACLC,QAAS,kBAAMJ,GAAe,IAC9BK,SAAUJ,GAHZ,YAOA,4BACEE,KAAK,SACLC,QAAS,kBAAMJ,EAAc,IAC7BK,SAAUH,GAHZ,aCGSI,EAbE,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,YAAaC,EAAiB,EAAjBA,WAC/B,OACE,2BACGD,EAAc,EADjB,IACqBC,ICaVC,EAhBK,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACrB,OACE,iCACE,4BAAKA,EAAYC,OACjB,2BAAID,EAAYE,QC6DPC,E,2MA5DbC,MAAQ,G,EAsBRC,gBAAkB,WAChB,IACMC,EADYC,IAAYC,MAAM,EAAKC,MAAMC,SAASC,QAC/BC,KAEzB,OADY,EAAKH,MAAMI,MAAMP,EAAS,I,EAIxChB,cAAgB,SAAAsB,GACd,EAAKH,MAAMK,QAAQC,KAAnB,uBAAwC,EAAKC,eAAiBJ,K,EAGhEI,aAAe,WACb,IACMV,EADYC,IAAYC,MAAM,EAAKC,MAAMC,SAASC,QAC/BC,KACzB,OAAOK,OAAOX,I,mFAtBK,IAAD,EACSY,KAAKT,MAAxBK,EADU,EACVA,QAASD,EADC,EACDA,MACbK,KAAKF,gBAAkBH,EAAMM,QAGjCL,EAAQM,QAAQ,oB,+BAoBR,IAEAD,EADUD,KAAKT,MAAfI,MACAM,OACFnB,EAAckB,KAAKb,kBACnBd,EAA0C,IAAxB2B,KAAKF,eACvBxB,EAAkB0B,KAAKF,iBAAmBG,EAEhD,OACE,oCACE,kBAAC,EAAD,CACE7B,cAAe4B,KAAK5B,cACpBC,gBAAiBA,EACjBC,gBAAiBA,IAEnB,kBAAC,EAAD,CAAUK,YAAaqB,KAAKF,eAAiB,EAAGlB,WAAYqB,IAC3DnB,GAAe,kBAAC,EAAD,CAAaA,YAAaA,S,GAvD7BqB,aCqBNC,MAjBf,WACE,OACE,yBAAKC,UAAU,OACb,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,KAAK,UAELC,OAAQ,SAAAhB,GAAK,OAAI,kBAAC,EAAD,iBAAYA,EAAZ,CAAmBI,MAAOa,QAE7C,kBAAC,IAAD,CAAUC,KAAK,IAAIC,GAAG,gBChBhCC,IAASJ,OAAO,kBAAC,EAAD,MAASK,SAASC,eAAe,W","file":"static/js/main.b9287afd.chunk.js","sourcesContent":["import React from 'react';\nimport T from 'prop-types';\n\nconst Controls = ({ onButtonClick, prevBtnDisabled, nextBtnDisabled }) => {\n  return (\n    <section>\n      <button\n        type=\"button\"\n        onClick={() => onButtonClick(-1)}\n        disabled={prevBtnDisabled}\n      >\n        Backward\n      </button>\n      <button\n        type=\"button\"\n        onClick={() => onButtonClick(1)}\n        disabled={nextBtnDisabled}\n      >\n        Forward\n      </button>\n    </section>\n  );\n};\n\nControls.propTypes = {\n  onButtonClick: T.func.isRequired,\n  prevBtnDisabled: T.bool.isRequired,\n  nextBtnDisabled: T.bool.isRequired,\n};\n\nexport default Controls;\n","import React from 'react';\nimport T from 'prop-types';\n\nconst Progress = ({ currentPage, totalPages }) => {\n  return (\n    <p>\n      {currentPage + 1}/{totalPages}\n    </p>\n  );\n};\n\nProgress.propTypes = {\n  currentPage: T.number.isRequired,\n  totalPages: T.number.isRequired,\n};\n\nexport default Progress;\n","import React from 'react';\nimport T from 'prop-types';\n\nconst Publication = ({ publication }) => {\n  return (\n    <article>\n      <h2>{publication.title}</h2>\n      <p>{publication.text}</p>\n    </article>\n  );\n};\n\nPublication.propTypes = {\n  publication: T.shape({\n    title: T.string.isRequired,\n    text: T.string.isRequired,\n  }).isRequired,\n};\n\nexport default Publication;\n","import React, { Component } from 'react';\nimport T from 'prop-types';\nimport queryString from 'query-string';\nimport Controls from '../Controls/Controls';\nimport Progress from '../Progress/Progress';\nimport Publication from '../Publication/Publication';\n\nclass Reader extends Component {\n  state = {};\n\n  static propTypes = {\n    items: T.arrayOf(\n      T.shape({\n        id: T.string.isRequired,\n        title: T.string.isRequired,\n        text: T.string.isRequired,\n      }).isRequired,\n    ).isRequired,\n    location: T.instanceOf(Object).isRequired,\n    history: T.instanceOf(Object).isRequired,\n  };\n\n  componentDidMount() {\n    const { history, items } = this.props;\n    if (this.handlePubInx() <= items.length) {\n      return;\n    }\n    history.replace('/reader?item=1');\n  }\n\n  showPublication = () => {\n    const pubInxObj = queryString.parse(this.props.location.search);\n    const pubInx = pubInxObj.item;\n    const pub = this.props.items[pubInx - 1];\n    return pub;\n  };\n\n  onButtonClick = item => {\n    this.props.history.push(`/reader?item=${this.handlePubInx() + item}`);\n  };\n\n  handlePubInx = () => {\n    const pubInxObj = queryString.parse(this.props.location.search);\n    const pubInx = pubInxObj.item;\n    return Number(pubInx);\n  };\n\n  render() {\n    const { items } = this.props;\n    const { length } = items;\n    const publication = this.showPublication();\n    const prevBtnDisabled = this.handlePubInx() === 1;\n    const nextBtnDisabled = this.handlePubInx() === length;\n\n    return (\n      <>\n        <Controls\n          onButtonClick={this.onButtonClick}\n          prevBtnDisabled={prevBtnDisabled}\n          nextBtnDisabled={nextBtnDisabled}\n        />\n        <Progress currentPage={this.handlePubInx() - 1} totalPages={length} />\n        {publication && <Publication publication={publication} />}\n      </>\n    );\n  }\n}\n\nexport default Reader;\n","import React from 'react';\nimport './App.module.css';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from 'react-router-dom';\nimport publications from '../data/publications';\nimport Reader from '../Reader/Reader';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route\n            path=\"/reader\"\n            /* eslint-disable-next-line react/jsx-props-no-spreading */\n            render={props => <Reader {...props} items={publications} />}\n          />\n          <Redirect from=\"/\" to=\"/reader\" />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}